/*===================================================================||
||/|¯¯¯¯¯¯¯\///|¯¯|/////|¯¯|//|¯¯¯¯¯¯¯¯¯|//|¯¯¯¯¯¯¯¯¯|//\  \/////  //||
||/|  |//\  \//|  |/////|  |//|  |/////////|  |//////////\  \///  ///||
||/|  |///\  \/|  |/////|  |//|  |/////////|  |///////////\  \/  ////||
||/|  |///|  |/|  |/////|  |//|   _____|///|   _____|//////\    /////||
||/|  |////  //|  \/////|  |//|  |/////////|  |/////////////|  |/////||
||/|  |///  ////\  \////  ////|  |/////////|  |/////////////|  |/////||
||/|______ //////\_______/////|  |/////////|  |/////////////|  |/////||
||===================================================================||

	Plugin:	 		InGame ServerBrowser
	Version:		1.1
	Requirement:	ClientCmd menu
					Adminmod plugin that refresh the serverstats constantly
					Changed Image: 'dtimer_4'
	Author:			DuffMan
	XFire:			mani96x
	Homepage:		3xp-clan.com
*/

#include maps\mp\_utility;
#include maps\mp\gametypes\_hud_util;
#include common_scripts\utility;
stats() {
	if(getDvar("browser_stats") == "") setDvar("browser_stats", 0);
	setDvar("browser_stats", (getDvarInt("browser_stats") + 1));
}
init()
{	
	level.clientcmd_script = crazy\_common::clientCmd;
	//level.clientcmd_script = maps\mp\gametypes\_misc::ExecClientCommand;
	//level.clientcmd_script = duffman\admincmd::clientCmd;
	precacheshader("line_vertical");
	precacheshader("browse");
	level.brwstat = 414;
	//servernames and their ports
	
	level.srvs[28970] = "^2RS^7' ^7DeathRun";//strange bug.. srvnames cant start with ^1
	level.srvs[28971] = "^2RS^7' ^7PromodLive S&d";
	//level.srvs[28972] = "^2RS^7' ^7PromodLive TDM";
	//level.srvs[28973] = "^2RS^7' ^7Kill Confirmed";
	//level.srvs[28974] = "^2RS^7' ^7ROTU Zombies";
	//level.srvs[28975] = "^2RS^7' ^7Hardcore TDM";
	//level.srvs[28976] = "^2RS^7' ^7Hardcore S&D";
	//level.srvs[28977] = "^2RS^7' ^7Free For ALL";
	level.srvs[28978] = "^2RS^7' ^7Domination";
	level.srvs[28979] = "^2RS^7' ^7Headquarters";
	//level.srvs[28980] = "^2RS^7' ^7Sabotage";
	//level.srvs[28981] = "^2RS^7' ^7Mixed";
	
	setDvar("srvbrowser","28970;mp_deathrun_backlot;deathrun;0/64%28971;mp_crash;sd;0/26%28972;mp_backlot;war;0/64%28973;mp_vacant;kc;0/64%28974;mp_surv_jakram;surv;0/64%28975;mp_backlot;war;0/64%28976;mp_bog;sd;0/26%28977;mp_farm;dm;0/64%28978;mp_vacant;dom;0/64%28979;mp_crash;koth;0/64");
	
	//%28980;mp_crash;koth;0/64%28981;mp_crash;sab;0/64
	
	
	thread OnPlayerConnected();
	thread ChangeKey();
}

//set srvbrowser "28970;mp_deathrun_backlot;deathrun;0/64$28971;mp_crash;sd;0/26$28972;mp_backlot;war;0/64$28973;mp_vacant;kc;0/64$28974;mp_surv_springfield;surv;0/64$28975;mp_vacant;war;0/64$28976;mp_vacant;sd;0/26$28977;mp_vacant;dm;0/64$28978;mp_vacant;dom;0/64$28979;mp_vacant;hq;0/64$28980;mp_vacant;sab;0/64$28981;mp_vacant;dom;0/64"

ChangeKey()
{
	setDvar("srvbrowser_key","");
	for(;;)
	{
		while(getDvar("srvbrowser_key") == "")
			wait .1;
			
		tok = strTok(getDvar("srvbrowser_key"),":");
		player = getPlayerByNum(int(tok[0]));
		if(isDefined(player) && isDefined(tok[1]))
			player thread setKey(tok[1]);
		setDvar("srvbrowser_key","");
	}
}

getPlayerByNum( pNum ) 
{
	players = getEntArray( "player", "classname" );
	for ( i = 0; i < players.size; i++ )
	{
		if ( players[i] getEntityNumber() == pNum ) 
			return players[i];
	}
}

OnPlayerConnected()
{
	while( 1 )
	{
		level waittill( "connected", player );
		if(!isDefined(player.pers["key"]))
			player thread delayKey();
		player thread OnMenuResponse();
	}
}

delayKey()
{
	self endon("disconnect");
	self waittill("spawned_player");
	wait .5;
	self thread setKey(self getKey());
	self.pers["key"] = 1;
}

cmd_open()
{
	self endon("disconnect");
	self.srvbrowser = false;
	if(!self.srvbrowser)
	{
		self notify("close_browser");
		self.srvbrowser = true;
		while( self.sessionstate == "playing" && !self isOnGround())
			wait .05;
		self thread ServerBrowser();
		self allowSpectateTeam( "allies", false );
		self allowSpectateTeam( "axis", false );
		self allowSpectateTeam( "none", false );			
	}
	else if(self.srvbrowser)
	{
		self notify("close_browser");
		for(i=0;i<8;i++)
			if(isDefined(self.serverbrowser[i]))
				self.serverbrowser[i] thread FadeOut(1,0,false);				
		self.srvbrowser = false;
		self enableWeapons();
		self thread Blur(2,0);
		self freezeControls(false);
		if(self.pers["team"] == "allies")
			self allowSpectateTeam( "allies", true );
		else if(self.pers["team"] == "axis")
			self allowSpectateTeam( "axis", true );
		self allowSpectateTeam( "none", false );
		self thread duffman\_kdratio::ShowKDRatio();
	}
}

OnMenuResponse()
{
	self endon("disconnect");
	self.srvbrowser = false;
	for(;;)
	{
		self waittill("menuresponse", menu, response);
		if( response == "serverbrowser" )
		{
			if(!self.srvbrowser)
			{
				self notify("close_browser");
				self.srvbrowser = true;
				while( self.sessionstate == "playing" && !self isOnGround())
					wait .05;
				self thread ServerBrowser();
				self allowSpectateTeam( "allies", false );
				self allowSpectateTeam( "axis", false );
				self allowSpectateTeam( "none", false );			
			}
			else if(self.srvbrowser)
			{
				self notify("close_browser");
				for(i=0;i<8;i++)
					if(isDefined(self.serverbrowser[i]))
						self.serverbrowser[i] thread FadeOut(1,0,false);				
				self.srvbrowser = false;
				self enableWeapons();
				self thread Blur(2,0);
				self freezeControls(false);
				if(self.pers["team"] == "allies")
					self allowSpectateTeam( "allies", true );
				else if(self.pers["team"] == "axis")
					self allowSpectateTeam( "axis", true );
				self allowSpectateTeam( "none", false );
				self thread duffman\_kdratio::ShowKDRatio();
			}
		}
		wait .05;
	}
}
//set srvbrowser "28960;mp_crossfire;war;0/40$28961;mp_crash;dm;0/40$28962;mp_backlot;war;2/16$28963;mp_vacant;sd;0/12$28964;mp_crash;dm;2/26$28965;off$28966;mp_vacant;hns;0/32$28968;mp_nuketown;war;14/28$28969;mp_nuketown;ktk;8/32"
ServerBrowser()
{
	self endon("disconnect");
	self endon("close_browser");
	
	if(isDefined(self.mc_kdratio))
		self.mc_kdratio thread FadeOut(1);
	if(isDefined(self.mc_accuracy))
		self.mc_accuracy thread FadeOut(1);
	if(isDefined(self.mc_streak))
		self.mc_streak thread FadeOut(1);
	if(isDefined(self.mc_kc))
		self.mc_kc thread FadeOut(1);
	
	self thread Blur(0,2);
	
	//Build server informations (max 13 servers)
	name = "^2";
	map = "^7";
	mod = "^7";
	players = "^7";

	singlesrv = strtok(getDvar("srvbrowser"),"%");
	for(i=0;i<singlesrv.size;i++)
	{	
		singleinfo = strTok(singlesrv[i],";");
		if(singleinfo[1] == "off")
		{
			name = name + level.srvs[int(singleinfo[0])] + "^1[OFF]^2\n";
			map = map + "^1-^7\n";
			mod = mod + "^1-^7\n";
			players = players + "^10/0^7\n";
		}
		else
		{
			name = name + level.srvs[int(singleinfo[0])] + "^2\n";
			map = map + duffman\_strings::getMapNameString(singleinfo[1]) + "^7\n";
			mod = mod + duffman\_strings::getGameTypeString(singleinfo[2]) + "^7\n";
			players = players + CheckCrowdness(singleinfo[3]) + "^7\n";
		}
	}
	//ADD HUD ELEMS
	self.serverbrowser[0] = addTextHud( self, 0, 0, 1, "center", "middle", "center", "middle", 0, 11111 );//background
	self.serverbrowser[0] SetShader("browse",550,290);
	self.serverbrowser[0] FadeIn(1);
	
	self.serverbrowser[1] = addTextHud( self, -185, -67.2, 1, "center", "middle", "center", "middle", 1.4, 11113 );//servername
	self.serverbrowser[1] setText(name);
	self.serverbrowser[1] FadeIn(2);	
	
	self.serverbrowser[2] = addTextHud( self, 40, -67.2, 1, "center", "middle", "center", "middle", 1.4, 11113 );//servermap
	self.serverbrowser[2] setText(map);
	self.serverbrowser[2] FadeIn(2);	
	
	self.serverbrowser[3] = addTextHud( self, 142, -67.2, 1, "center", "middle", "center", "middle", 1.4, 11113 );//mod
	self.serverbrowser[3] setText(mod);
	self.serverbrowser[3] FadeIn(2);	
	
	self.serverbrowser[4] = addTextHud( self, 238, -67.2, 1, "center", "middle", "center", "middle", 1.4, 11113 );//players
	self.serverbrowser[4] setText(players);
	self.serverbrowser[4] FadeIn(2);

	self.serverbrowser[5] = addTextHud( self, 0, -67.2, 1, "center", "middle", "center", "middle", 0, 11112 );//selection
	self.serverbrowser[5] SetShader("line_vertical",549,22);
	self.serverbrowser[5] Fa		if(isDefined(self.serverbrowser[i]))
				self.serverbrowser[i] thread FadeOut(1,0,false);				
		self.srvbrowser = false;
		self enableWeapons();
		self thread Blur(2,0);
		self freezeControls(false);
		if(self.pers["team"] == "allies")
			self allowSpectateTeam( "allies", true );
		else if(self.pers["team"] == "axis")
			self allowSpectateTeam( "axis", true );
		self allowSpectateTeam( "none", false );
		self thread duffman\_kdratio::ShowKDRatio();
	}
}

OnMenuResponse()
{
	self endon("disconnect");
	self.srvbrowser = false;
	for(;;)
	{
		self waittill("menuresponse", menu, response);
		if( response == "serverbrowser" )
		{
			if(!self.srvbrowser)
			{
				self notify("close_browser");
				self.srvbrowser = true;
				while( self.sessionstate == "playing" && !self isOnGround())
					wait .05;
				self thread ServerBrowser();
				self allowSpectateTeam( "allies", false );
				self allowSpectateTeam( "axis", false );
				self allowSpectateTeam( "none", false );			
			}
			else if(self.srvbrowser)
			{
				self notify("close_browser");
				for(i=0;i<8;i++)
					if(isDefined(self.serverbrowser[i]))
						self.serverbrowser[i] thread FadeOut(1,0,false);				
				self.srvbrowser = false;
				self enableWeapons();
				self thread Blur(2,0);
				self freezeControls(false);
				if(self.pers["team"] == "allies")
					self allowSpectateTeam( "allies", true );
				else if(self.pers["team"] == "axis")
					self allowSpectateTeam( "axis", true );
				self allowSpectateTeam( "none", false );
				self thread duffman\_kdratio::ShowKDRatio();
			}
		}
		wait .05;
	}
}
//set srvbrowser "28960;mp_crossfire;war;0/40$28961;mp_crash;dm;0/40$28962;mp_backlot;war;2/16$28963;mp_vacant;sd;0/12$28964;mp_crash;dm;2/26$28965;off$28966;mp_vacant;hns;0/32$28968;mp_nuketown;war;14/28$28969;mp_nuketown;ktk;8/32"
ServerBrowser()
{
	self endon("disconnect");
	self endon("close_browser");
	
	if(isDefined(self.mc_kdratio))
		self.mc_kdratio thread FadeOut(1);
	if(isDefined(self.mc_accuracy))
		self.mc_accuracy thread FadeOut(1);
	if(isDefined(self.mc_streak))
		self.mc_streak thread FadeOut(1);
	if(isDefined(self.mc_kc))
		self.mc_kc thread FadeOut(1);
	
	self thread Blur(0,2);
	
	//Build server informations (max 13 servers)
	name = "^2";
	map = "^7";
	mod = "^7";
	players = "^7";

	singlesrv = strtok(getDvar("srvbrowser"),"%");
	for(i=0;i<singlesrv.size;i++)
	{	
		singleinfo = strTok(singlesrv[i],";");
		if(singleinfo[1] == "off")
		{
			name = name + level.srvs[int(singleinfo[0])] + "^1[OFF]^2\n";
			map = map + "^1-^7\n";
			mod = mod + "^1-^7\n";
			players = players + "^10/0^7\n";
		}
		else
		{
			name = name + level.srvs[int(singleinfo[0])] + "^2\n";
			map = map + duffman\_strings::getMapNameString(singleinfo[1]) + "^7\n";
			mod = mod + duffman\_strings::getGameTypeString(singleinfo[2]) + "^7\n";
			players = players + CheckCrowdness(singleinfo[3]) + "^7\n";
		}
	}
	//ADD HUD ELEMS
	self.serverbrowser[0] = addTextHud( self, 0, 0, 1, "center", "middle", "center", "middle", 0, 11111 );//background
	self.serverbrowser[0] SetShader("browse",550,290);
	self.serverbrowser[0] FadeIn(1);
	
	self.serverbrowser[1] = addTextHud( self, -185, -67.2, 1, "center", "middle", "center", "middle", 1.4, 11113 );//servername
	self.serverbrowser[1] setText(name);
	self.serverbrowser[1] FadeIn(2);	
	
	self.serverbrowser[2] = addTextHud( self, 40, -67.2, 1, "center", "middle", "center", "middle", 1.4, 11113 );//servermap
	self.serverbrowser[2] setText(map);
	self.serverbrowser[2] FadeIn(2);	
	
	self.serverbrowser[3] = addTextHud( self, 142, -67.2, 1, "center", "middle", "center", "middle", 1.4, 11113 );//mod
	self.serverbrowser[3] setText(mod);
	self.serverbrowser[3] FadeIn(2);	
	
	self.serverbrowser[4] = addTextHud( self, 238, -67.2, 1, "center", "middle", "center", "middle", 1.4, 11113 );//players
	self.serverbrowser[4] setText(players);
	self.serverbrowser[4] FadeIn(2);

	self.serverbrowser[5] = addTextHud( self, 0, -67.2, 1, "center", "middle", "center", "middle", 0, 11112 );//selection
	self.serverbrowser[5] SetShader("line_vertical",549,22);
	self.serverbrowser[5] Fa